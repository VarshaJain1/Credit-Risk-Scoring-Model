{
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# -----------------------------\n",
        "# Bond Pricing, Duration, Convexity\n",
        "# -----------------------------\n",
        "def bond_price(face_value, coupon_rate, maturity, ytm, freq=2):\n",
        "    \"\"\"\n",
        "    Price a fixed-rate bond.\n",
        "    \"\"\"\n",
        "    periods = int(maturity * freq)\n",
        "    coupon = coupon_rate * face_value / freq\n",
        "    discount_factors = [(1 + ytm/freq) ** -t for t in range(1, periods + 1)]\n",
        "    pv_coupons = sum(coupon * df for df in discount_factors)\n",
        "    pv_face = face_value * discount_factors[-1]\n",
        "    return pv_coupons + pv_face\n",
        "\n",
        "def duration_convexity(face_value, coupon_rate, maturity, ytm, freq=2):\n",
        "    \"\"\"\n",
        "    Calculate Macaulay Duration, Modified Duration, and Convexity.\n",
        "    \"\"\"\n",
        "    periods = int(maturity * freq)\n",
        "    coupon = coupon_rate * face_value / freq\n",
        "    cashflows = np.array([coupon] * periods)\n",
        "    cashflows[-1] += face_value\n",
        "    times = np.arange(1, periods + 1)\n",
        "    discount_factors = (1 + ytm/freq) ** -times\n",
        "\n",
        "    pv_cashflows = cashflows * discount_factors\n",
        "    price = pv_cashflows.sum()\n",
        "\n",
        "    macaulay_duration = np.sum(times * pv_cashflows) / (price * freq)\n",
        "    modified_duration = macaulay_duration / (1 + ytm/freq)\n",
        "    convexity = np.sum(pv_cashflows * times * (times + 1)) / (price * (freq**2))\n",
        "\n",
        "    return macaulay_duration, modified_duration, convexity\n",
        "\n",
        "# -----------------------------\n",
        "# Portfolio Simulation\n",
        "# -----------------------------\n",
        "def portfolio_value(bonds, ytm_shift=0):\n",
        "    \"\"\"\n",
        "    Calculate portfolio value under yield shift.\n",
        "    bonds: list of dicts [{face, coupon, maturity, ytm, weight}]\n",
        "    \"\"\"\n",
        "    total = 0\n",
        "    for b in bonds:\n",
        "        price = bond_price(\n",
        "            face_value=b[\"face\"],\n",
        "            coupon_rate=b[\"coupon\"],\n",
        "            maturity=b[\"maturity\"],\n",
        "            ytm=b[\"ytm\"] + ytm_shift\n",
        "        )\n",
        "        total += price * b[\"weight\"]\n",
        "    return total\n",
        "\n",
        "def simulate_shifts(bonds, shifts):\n",
        "    base_value = portfolio_value(bonds, 0)\n",
        "    results = []\n",
        "    for s in shifts:\n",
        "        new_value = portfolio_value(bonds, s)\n",
        "        pnl = new_value - base_value\n",
        "        results.append((s*100, pnl))\n",
        "    return pd.DataFrame(results, columns=[\"Shift (bps)\", \"PnL\"])\n",
        "\n",
        "# -----------------------------\n",
        "# Example Usage\n",
        "# -----------------------------\n",
        "if __name__ == \"__main__\":\n",
        "    # Sample portfolio\n",
        "    bonds = [\n",
        "        {\"face\": 100, \"coupon\": 2.5, \"maturity\": 10, \"ytm\": 0.035, \"weight\": 0.25},\n",
        "        {\"face\": 100, \"coupon\":10.671, \"maturity\": 40, \"ytm\": 0.04, \"weight\": 0.25},\n",
        "        {\"face\": 100, \"coupon\": 6.5, \"maturity\": 40, \"ytm\": 0.036, \"weight\": 0.25},\n",
        "        {\"face\": 100, \"coupon\": 8.95, \"maturity\": 30, \"ytm\": 0.038, \"weight\": 0.25}\n",
        "    ]\n",
        "\n",
        "\n",
        "    # Parallel shifts from -300 bps to +300 bps\n",
        "    shifts = np.linspace(-0.03, 0.03, 25)\n",
        "    df = simulate_shifts(bonds, shifts)\n",
        "\n",
        "    # Plot\n",
        "    plt.plot(df[\"Shift (bps)\"], df[\"PnL\"], marker=\"o\")\n",
        "    plt.axhline(0, color=\"gray\", linestyle=\"--\")\n",
        "    plt.title(\"Portfolio P&L under Yield Curve Shifts\")\n",
        "    plt.xlabel(\"Shift (bps)\")\n",
        "    plt.ylabel(\"PnL\")\n",
        "    plt.grid(True)\n",
        "    plt.show()\n",
        "\n",
        "    # Duration & Convexity for one bond\n",
        "    D, Dmod, C = duration_convexity(100, 2.5, 20, 0.035)\n",
        "    print(f\"Macaulay Duration: {D:.2f} years\")\n",
        "    print(f\"Modified Duration: {Dmod:.2f}\")\n",
        "    print(f\"Convexity: {C:.2f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "dQr2VbZiYc14",
        "outputId": "7d2df1fc-8827-435f-bd25-adc039cb97e1"
      },
      "id": "dQr2VbZiYc14",
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Macaulay Duration: 9.25 years\n",
            "Modified Duration: 9.09\n",
            "Convexity: 123.95\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
